---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: statemachine2_transactional_kafka
{{ include "charts.labels.standard" .}}
  name: statemachine2_transactional_kafka
  namespace: {{.Release.Namespace}}
{{ if .Values.deployment.annotations }}
    {{- .Values.deployment.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: statemachine2_transactional_kafka
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.deployment.replicas }}
  strategy: {}
  template:
    metadata:
{{ if .Values.podAnnotations }}
      annotations:
        {{- .Values.podAnnotations | toYaml | nindent 8 }}
{{- end }}
      labels:
        app: statemachine2_transactional_kafka
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
{{ if .Values.deployment.serviceAccount.create }}
{{ if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
{{- end }}
{{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
      - env:
        - name: HTTP_LISTEN
          value: :{{.Values.ports.http}}
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: statemachine2_transactional_kafka
              key: DatabaseUsername
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: statemachine2_transactional_kafka
              key: DatabasePassword
        - name: DB_PORT
          value: :{{.Values.deployment.env.db.port}}
        - name: DB_HOST
          value: {{.Values.deployment.env.db.host}}
        - name: DB_NAME
          value: {{.Values.deployment.env.db.name}}
        image: "{{ .Values.deployment.image }}"
        securityContext:
          {{- .Values.podSecurityContext | toYaml | nindent 10 }}
        {{ template "charts.platform.probes" .Values.ports.http }}
        name: statemachine2
        ports:
        - containerPort: {{.Values.ports.http}}
          name: "http"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      restartPolicy: Always
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
 